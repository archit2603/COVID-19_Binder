import os
import sys
import cPickle
import numpy as np

from DL4DistancePrediction4 import ContactUtils

## this script adds contact number of Ca and Cb atoms to a tpl.pkl file
def Usage():
	print 'python AddContactNumber2TPLPKL.py tplFile_PKL [minSeqSep [savefile] ]'
	print '	tplFile_PKL: the template file in PKL format with suffix .tpl.pkl, generated by HHM2TPL.py'
	print '	minSeqSep: the minimum sequence separation for a valid contact, default 4'
	print '	savefile: the file for result saving (optional). If not specified, save to a file in current work directoy, but with the same name as the input file'

if len(sys.argv) < 2:
	Usage()
	exit(1)

tplFile = sys.argv[1]

minSeqSep=4
if len(sys.argv)>=3:
	minSeqSep = np.int16(sys.argv[2])

savefile = os.path.basename(tplFile)
if len(sys.argv) >= 4:
	savefile = sys.argv[3]

if not os.path.isfile(tplFile):
	print 'ERROR: the tpl file does not exist: ', tplFile
	exit(1)

with open(tplFile, 'rb') as fh:
	tpl = cPickle.load(fh)

distMatrix = tpl['atomDistMatrix']

for apt, at in zip(['CaCa', 'CbCb'], ['CNa', 'CNb']):
	contactMatrix = ContactUtils.FromDistMatrix( distMatrix[apt] )
	tpl[at] = ContactUtils.CalcContactNumber(contactMatrix, minSeqSep)

## save
with open(savefile, 'w') as fh:
	cPickle.dump(tpl, fh, protocol=cPickle.HIGHEST_PROTOCOL)

## print for debug
seqLen = tpl['CNa'].shape[0]
for i, cna, cnb in zip(range(seqLen), tpl['CNa'], tpl['CNb']):
	print i, cna, cnb
